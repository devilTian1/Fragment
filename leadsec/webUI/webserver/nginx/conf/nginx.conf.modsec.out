
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    #server {
        #listen       80;
        #server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        #location / {
        #    root   html;
        #    index  index.html index.htm;
        #}

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        #error_page   500 502 503 504  /50x.html;
        #location = /50x.html {
        #    root   html;
        #}

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    include fastcgi.conf;
			#fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            #include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    #}


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    server  {
        #MARK
    	listen 10.0.0.2:8889;
        listen 10.0.0.2:10008;
    	ssl                  on; 
        ssl_certificate      /usr/local/webserver/cert/server.crt;
        ssl_certificate_key  /usr/local/webserver/cert/server.key;
        ssl_client_certificate /usr/local/webserver/cert/ca.crt;
        ssl_verify_client on;
        ssl_session_timeout  5m;	
    	
        location / { 
            ModSecurityEnabled on; 
            ModSecurityConfig modsecurity.conf;
            ModSecurityPass @backend;
        }   
            
        location @backend {
            proxy_pass https://10.0.0.2:8888;
            proxy_read_timeout 180s;
        }   
    }   
    
    server {
        listen       10.0.0.2:8888;
        server_name  10.0.0.2;

        ssl                  on;
        ssl_certificate      ssl.crt;
        ssl_certificate_key  ssl.key;

        ssl_session_timeout  5m;

        ssl_protocols  SSLv2 SSLv3 TLSv1;
        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers   on;

        #error_page   500 502 503 504  /50x.html;
        #location = /50x.html {
        #    root   html;
        #}
        location / {
            root   html;
            index  index.php;
        }
        location ~ \.php$ {
            root           html;
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_index  index.php;
            include fastcgi.conf;
            if ($server_port = 8889) {
                rewrite auth_check_login\.php$ https://$server_addr:10008/auth_check_login.php break;
            }
            if ($server_port = 10008) {
                rewrite ^.*$ /auth_check_login.php break;
            }
			#fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            #include        fastcgi_params;
        }
    }
                                                                                    
    

}
